import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';

class SignupForm extends StatefulWidget {
  const SignupForm({super.key});

  @override
  _SignupFormState createState() => _SignupFormState();
}

class _SignupFormState extends State<SignupForm> {
  final termsUse = 1;
  final termsPrivacy = 2;

  bool termsUseCheck = false;
  bool termsPrivacyCheck = false;

  String selectedEamil = "선택";

  final List<String> dropDownItems = [
    "naver.com",
    "gmail.com",
    "daum.net",
  ];

  final _formKey = GlobalKey<FormState>();
  final _nicknameController = TextEditingController(); // 닉네임 컨트롤러
  final _idController = TextEditingController(); // 닉네임 컨트롤러
  final _descriptionController = TextEditingController(); // 설명 문구 컨트롤러
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final _confirmPasswordController = TextEditingController();
  final _phoneController = TextEditingController();

  final _dropDownController = OverlayPortalController();
  final _dropDownKey = GlobalKey();

  final terms_privacy_text = '''
회원가입: 이메일, 이름, 휴대폰번호, 닉네임을 수집합니다. 이 정보는 계약 종료 또는 회원 탈퇴 시까지 보관되며, 관계법령에 따라 필요한 경우를 제외하고 목적 달성 시 즉시 파기됩니다.

본인인증: 이름, 휴대폰 번호, 성별, 생년월일을 수집합니다.

간편로그인: 네이버, 카카오 계정 정보를 수집합니다. (구글, 애플 계정 정보도 추가 예정)

캠핑예약: 이름, 휴대폰 번호, 차량번호, 결제 정보를 수집합니다.

상품구매: 이름, 휴대폰 번호, 배송주소, 결제정보를 수집합니다.

환불(취소): 계좌번호, 은행명, 예금주 정보를 수집합니다.
위 개인정보 수집 및 이용에 대한 동의를 거부할 수 있습니다. 단, 거부 시 서비스 이용에 제한이 있을 수 있습니다.
''';

  final terms_use_text = '''
제1조 목적
이 약관은 데이터트립 (이하 “회사"라 함)이 운영하는 차박 플랫폼(이하 “플랫폼"이라 함)에서 운영하는 캠핑 관련 서비스 “편안차박" (이하 “서비스"라 함)을 이용함에 있어 “회사" 와 “이용자"의 권리, 의무 및 책임사항을 규정함을 목적으로 합니다.
※ [PC 통신, 무선 등을 이용하는 경우에 대해서도 그 성질에 반하지 않는 한 이 약관을 준용합니다.
제2조 용어의 정의

“플랫폼" 이란 “이용자" 가 컴퓨터 등 정보통신 설비를 이용하여 “서비스"를 이용할 수 있도록 “회사”가 제공하는 가상의 영업장을 말하며, 아울러 “플랫폼"을 운영하는 사업자의 의미로도 사용합니다.

“이용자" 란 “플랫폼"을 통하여 이 약관에 따라 제공하는 서비스를 받는 회원 및 비회원을 말합니다.

“회원"이라 함은 “플랫폼"에 회원 등록을 한 자로서, 계속적으로 “플랫폼" 이 제공하는 서비스를 이용할 수 있는 자를 말합니다.

“비회원”이라 함은 회원에 가입하지 않고 “플랫폼"이 제공하는 서비스를 이용하는 자를 말합니다.

“제휴판매자”이라 함은 회사와 B2B 계약 체결을 완료한 B2B 사업자 회원을 말합니다.

"스토어 서비스”란 제29조 제1항에 따라 “회사”가 “이용자”에게 제공하는 전자상거래 관련 서비스를 말합니다.

"상품"이란 "플랫폼" 내에서 "이용자"가 구매 가능한 숙박 시설 예약 상품 및 스토어 상품을 말합니다.
제3조 약관 등의 명시와 설명 및 개정

“회사"는 이 약관의 내용과 상호 및 대표자 성명, 영업소 소재지 주소(소비자의 불만을 처리할 수 있는 곳의 주소를 포함), 전화번호, E-mail 주소, 사업자등록번호, 통신판매업 신고번호, 개인정보보호 책임자 등을 “이용자”가 쉽게 알 수 있도록 “플랫폼"의 초기 서비스 화면(전면)에 게시합니다. 다만, 약관의 내용은 “이용자"가 연결 화면을 통하여 볼 수 있도록 할 수 있습니다.

회사"는 [전자상거래 등에서의 소비자보호에 관한 법률], [약관의 규제에 관한 법률], [전자 문서 및 전자거래기본법], [전자금융거래법], [전자서명법], [정보통신망 이용 촉진 및 정보보호 등에 관한 법률], [소비자기본법] 등 관련 법을 위배하지 않는 범위에서 이 약관을 개정할 수 있습니다.

“회사"가 약관을 개정할 경우에는 적용일자 및 개정 사유를 명시하여 현행 약관과 함께 E-mail 등으로 적용일자 7일 이전부터 적용일자 전일까지 공지합니다. 다만, “이용자"에게 불리하게 약관 내용을 변경하는 경우에는 최소한 30일 이상의 사전 유예기간을 두고 공지합니다. 이 경우 “회사"는 개정 전 내용과 개정 후 내용을 “이용자" 가 알기 쉽도록 표시합니다. 단, 회원의 연락처 미기재, 변경 후 미수정 등으로 인하여 개별 통지가 어려운 경우 일괄 공지를 개별 통지로 간주합니다.

“회원" 은 변경된 약관에 동의하지 않을 권리가 있으며, 동의하지 않을 경우에는 서비스 이용을 중단하고 탈퇴할 수 있습니다.

“회원" 이 전 4항에 따라 약관에 대한 반대 의사를 표시하지 않고 “서비스"를 이용한 경우에는 약관에 동의한 것으로 봅니다.
제4조 약관 외 준칙

본 약관에서 정하지 아니한 사항과 본 약관의 해석에 관하여는 『전자상거래 등에서의 소비자보호에 관한 법률』, 『약관의 규제에 관한 법률』, 공정거래위원회가 정하는 『전자상거래 등에서의 소비자보호 지침』 등 관련 법령 및 상관례에 따릅니다.

"회사"는 필요한 경우 특정 서비스에 관하여 적용될 사항(이하 '개별약관')을 정하여 이를 "회사"를 통해 미리 공지할 수 있습니다.

"회사"는 제2항의 개별약관에 변경이 있을 경우 본 약관 제3조 제3항에 따라 공지하도록 하겠습니다.
제5조 회사의 의무

“회사"는 법령과 이 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 이 약관이 정하는 바에 따라 지속적이고, 안정적인 서비스를 제공하는 데 최선을 다하여야 합니다.

“회사"는 “이용자" 가 안전하게 서비스를 이용할 수 있도록, “이용자"의 개인정보(신용 정보 포함) 보호를 위한 보안 시스템을 갖추어야 합니다.

“회사"는 이외에 관계 법령이 정한 의무사항을 준수합니다.
제6조 회원가입

“이용자"는 “플랫폼" 이 정한 절차에 따라 이 약관에 동의한다는 의사표시를 함으로서 회원가입을 신청합니다.

“회사"는 제 1항과 같이 회원으로 가입할 것을 신청한 “이용자" 중 다음 각 호에 해당되지 않는 한 회원으로 등록합니다.

회원자격 상실 후 24시간이 경과하지 않는 경우

등록 내용에 타인의 정보를 사용한 경우

만 14세 미만의 아동이 신청하는 경우

본 약관 13조 “이용자"의 의무를 지키지 않아 회원자격이 제한되거나, 상실된 경우

기타 본 약관에 위배되거나 위법 또는 부당한 이용 신청임이 확인된 경우 및 "회사"가 합리적인 판단에 의하여 필요하다고 인정하는 경우

회원가입계약의 성립 시기는 “회사"의 승낙이 회원에게 도달한 시점으로 합니다.

회원은 회원가입 시 등록한 사항에 변경이 있는 경우, 상당한 기간 이내에 “플랫폼"에 대하여 회원정보 수정하거나 E-mail 등의 방법으로 그 변경사항을 알려야 합니다.

“회사"는 관련 법령에 따라 필요한 경우 별도의 성인인증 절차를 실시할 수 있습니다.

"회사"는 회원의 종류 및 등급을 구분할 수 있으며, 구분별로 이용할 수 있는 "회사"의 서비스 종류, 혜택을 세분하는 등으로 회원 간 이용에 차등을 둘 수 있습니다.
제7조 개인정보보호

회사는 "회사" 이용자의 개인정보를 소중하게 생각합니다. 회사는 관련 법령에 따른 허용범위 및 이용자의 동의 내에서, 서비스의 원활한 제공을 위하여 필요한 범위로만 이용자의 개인정보를 처리합니다. 회사가 "회사" 이용자의 개인정보를 안전하게 처리하기 위하여 기울이는 노력 기타 관련한 상세한 내용은 개인정보처리 방침을 확인하여 주시기 바랍니다.

“플랫폼" 은 개인정보의 수집・이용・제공에 관한 동의 란을 미리 선택한 것으로 설정해두지 않습니다. 또한 개인정보의 수집・이용・제공에 관한 “이용자"의 동의거절 시 제한되는 서비스를 구체적으로 명시하고, 필수 수집항목이 아닌 개인정보의 수집・이용・제공에 관한 “이용자"의 동의 거절을 이유로 회원가입 등 서비스 제공을 제한하거나 거절하지 않습니다.
제8조 회원의 ID, 비밀번호 보호에 대한 의무

ID와 비밀번호에 관한 관리 책임은 회원에게 있습니다.

“회원" 은 자신의 ID 및 비밀번호를 제3자에게 이용하게 해서는 안 됩니다.

“회원" 이 자신의 ID 및 비밀번호를 도난당하거나 제3자가 사용하고 있음을 인지한 경우에는 바로 “회사"에 통보하고 “회사"의 안내가 있는 경우에는 그에 따라야 합니다.

“회원" 이 제3항에 따른 통지를 하지 않거나 “회사"의 조치에 따르지 않아 발생하는 모든 불이익에 대한 책임은 “회원"에게 있습니다.

회원은 회원가입 시 등록한 사항에 변경이 있는 경우, 상당한 기간 이내에 "회사"에 회원정보 수정 등의 방법으로 변경사항을 알려 "회사"가 원활한 서비스를 제공할 수 있도록 조력하여야 할 의무가 있습니다. 회원이 이러한 의무를 해태하여 서비스의 불완전 제공 또는 미제공 등 불이익이 발생하는 경우라도, "회사"는 별도의 귀책사유가 없는 한 그에 대한 책임을 부담하지 아니합니다.

"회사"는 회원 ID의 유출 우려가 있거나, ID에 반사회적 또는 미풍양속에 어긋나는 표현이 포함되어 있는 경우, 기타 이용자를 회사 및 "회사"의 운영자로 오인할 우려가 있는 경우에는 사전 예고 없이 회원자격을 제한하거나 해당 ID의 이용을 제한할 수 있습니다.
제9조 회원에 대한 통지

“회사" 가 회원에 대한 통지를 하는 경우, 회원이 “회사"에게 제공한 E-mail, SMS와 APP 메시지, 알림톡 등의 기타 수단으로 통지할 수 있습니다.

“회사"는 불특정 다수 회원에 대한 통지의 경우 1주일 이상 “플랫폼" 게시판에 게시함으로써 개별 통지에 갈음할 수 있습니다. 다만, 회원 본인의 거래와 관련하여 중대한 영향을 미치는 사항에 대하여는 개별 통지합니다.

"회사"가 비회원에 대한 통지를 할 경우 본 약관에 별도 규정이 없는 한 이용자가 제공한 E-mail, 휴대폰 번호 등으로 통지할 수 있으며, 불특정 다수의 비회원에게 통지하는 경우 제2호에 따라 통지할 수 있습니다.
제10조 회원 탈퇴 및 자격 상실 등

회원은 “회사"에 언제든지 탈퇴를 요청할 수 있으며 “회사"는 신속하게 회원 탈퇴를 처리합니다. 

회원이 다음 각 호의 사유에 해당하는 경우, “플랫폼" 은 회원자격을 제한 및 정지시킬 수 있습니다.

◦ 가입 신청 시에 허위 내용을 등록한 경우

◦ 다른 사람의 “플랫폼" 이용을 방해하거나 그 정보를 도용하는 등 전자상거래 질서를 위협하는 경우

◦ “플랫폼" 을 이용하여 법령 또는 이 약관이 금지하거나 공서양속에 반하는 행위를 하는 경우

◦ 본 약관 제13조에 따른 “이용자"의 의무를 지키지 아니하였을 경우

“회사" 가 회원 자격을 제한, 정지시킨 후, 같은 행위가 2회 이상 반복되거나 30일 이내에 그 사유가 시정되지 아니하는 경우 “회사"는 회원자격을 상실시킬 수 있습니다.

회사는 회원이 계속해서 12개월 이상 로그인하지 않는 경우, 회원정보의 보호 및 운영의 효율성을 위해 이용을 제한할 수 있습니다.

본 조의 이용 제한 범위 내에서 제한의 조건 및 세부내용은 회사의 이용 제한 정책에서 정하는 바에 의합니다.

본 조에 따라 서비스 이용을 제한하거나 계약을 해지하는 경우에는 회사는 제6조 [회원에 대한 통지]에 따라 통지합니다.

회원은 본 조에 따른 이용 제한 등에 대해 회사가 정한 절차에 따라 이의신청을 할 수 있습니다. 이때 이의가 정당하다고 회사가 인정하는 경우 회사는 즉시 서비스의 이용을 재개합니다.
제11조 이용자의 의무

신청 또는 변경시 허위 내용의 등록

타인의 정보 도용

“플랫폼" 에 게시된 정보의 변경

“플랫폼" 이 정한 정보 이외의 정보(컴퓨터 프로그램 등) 등의 송신 또는 게시

“플랫폼" 및 기타 제3자의 저작권 등 지적재산권에 대한 침해

“플랫폼" 및 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위

외설 또는 폭력적인 메시지, 화상, 음성, 기타 공서양속에 반하는 정보를 “플랫폼" 에 공개 또는 게시하는 행위

고객센터 상담 내용이 욕설, 폭언, 성희롱 등에 해당하는 행위

확인되지 않은 허위의 게시물을 작성하는 행위

정당한 사유 없이 “회사" 의 영업을 방해하는 내용을 기재하는 행위

리버스엔지니어링, 디컴파일, 디스어셈블 및 기타 일체의 가공 행위를 통하여 서비스를 복제, 분해 또는 모방 기타 변형하는 행위

자동 접속 프로그램 등을 사용하는 등 정상적인 용법과 다른 방법으로 서비스를 이용하여 “회사" 의 서버에 부하를 일으켜 “회사" 의 정상적인 서비스를 방해하는 행위

성년이 아닌 이용자의 이성 간 혼숙 행위

제휴판매자의 시설 이용 과정에서 욕설, 폭언, 성희롱 등에 해당하는 행위로 제휴판매자의 시설 업무환경을 심각히 어지럽히는 경우

제휴판매자의 시설 이용 과정에서 기물 파손 등의 행위로 제휴판매자에게 재산상의 손해를 발생시키는 경우

기타 관계법령에 위반된다고 판단되는 행위

제12조 서비스 제공 및 변경

“플랫폼" 은 다음과 같은 업무를 수행합니다.

◦ 상품에 대한 정보 제공

◦ 플랫폼에서 제공하는 상품(숙박 시설 예약, 커머스) 이용에 대한 청약 접수

◦ 구매 계약이 체결된 서비스에 대한 통지

기타 “플랫폼" 이 정하는 업무

“플랫폼" 이 “이용자" 에게 접수한 청약에 대한 변경 내용 및 "제휴판매자"와 계약을 체결한 서비스의 내용을 재화 등의 품절 또는 기술적 사양의 변경 등의 사유로 변경할 경우에는 그 사유를 “이용자"에게 통지 가능한 연락처로 신속하게 통지합니다.

"이용자"는 이용 신청시 기재한 사항이 변경되었을 경우에는 수정하여야 하며, 수정하지 아니하여 발생하는 문제의 책임은 이용자에게 있습니다.
제13조 서비스의 이용시간 및 중단

“플랫폼" 의 이용은 특별한 사유가 없는 한 연중무휴 1일 24시간을 원칙으로 합니다. 다만, 컴퓨터 등 정보통신 설비의 보수 점검, 교체 및 고장, 통신의 두절 등의 사유 또는 정기점검 등의 필요로 “회사" 가 지정한 날 등의 경우에는 “플랫폼" 을 일시적으로 중단할 수 있습니다.

“회사"는 “플랫폼"의 원활한 운영을 위하여 기간을 정하여 사전에 고지하고 서비스를 중지할 수 있으며, 불가피하게 긴급한 조치를 하여야 하는 경우 사후에 통지할 수 있습니다.

고객센터 운영시간은 아래와 같이 규정합니다.

편안차박 고객센터 운영시간 : 평일 오전 10시 00분 ~ 오후 06시 00분 (점심시간 오후 1시부터 오후 2시 제외, 주말 및 공휴일 제외)
제14조 정보의 제공 및 광고의 게재

"회사"는 서비스를 운영함에 있어 "회사" 또는 광고주의 서비스 관련 각종 광고를 서비스 화면에 게재하거나 "회원"의 동의를 얻어 E-mail 및 서신 우편, SMS(MMS), TM(telemarketing), app push, 알림톡 등의 방법으로 "회원"에게 제공할 수 있습니다.

"회원"이 서비스상에 게재되어 있는 광고를 이용하거나 서비스를 통한 광고주의 판촉활동에 참여하는 등의 방법으로 교신 또는 거래를 하는 것은 전적으로 "회원"과 광고주 간의 문제입니다. "회원"과 광고주 간에 분쟁, 기타 문제가 발생하는 경우 회원과 광고주가 직접 해결하여야 하며, 이와 관련하여 "회사"는 귀책사유가 없는 한 책임도 지지 않습니다.
제15조 통신판매중개서비스 이용

"회사"는 통신판매중개 서비스와 관련하여 통신판매중개자로서 "이용자"와 "제휴판매자"간의 자유로운 "상품" 등의 거래를 위한 시스템을 운영 및 관리, 제공할 뿐이므로 "이용자"는 "제휴판매자"로부터 재화 또는 용역을 구매하기 전에 반드시 재화 또는 용역의 상세 내용과 거래 조건을 정확하게 확인한 후 구매를 신청하여야 합니다. 구매하려는 재화 또는 용역의 상세 내용과 거래 조건을 확인하지 않고 구매하여 발생한 모든 손실과 손해는 "이용자" 본인이 책임을 부담합니다.

"이용자"는 구매의사 없이 "제휴판매자"가 판매하는 재화 또는 용역의 구매의사를 표시하거나 예약해서는 아니 되고, "제휴판매자"의 재화 또는 용역 등의 판매 기회를 방해하거나 다른 "이용자"의 구매 기회를 방해하여서는 아니 됩니다.

"회사"는 "이용자"가 제2항을 위반한 경우에는 통신판매중개서비스의 일부 또는 전부를 이용 정지하거나 통신판매중개 서비스 이용계약을 임의로 해지할 수 있으며, 이 경우 발생하는 손해에 대한 책임은 "이용자"가 부담합니다.

"이용자"는 본 약관 및 "회사"가 서비스 화면에서 공지하는 내용을 준수하여야 하고, 본 약관 및 공지 내용을 위반하거나 이행하지 않아서 발생하는 모든 손실과 손해에 대하여 책임을 집니다.

"이용자"는 "제휴판매자"와의 매매 절차에서 분쟁이 발생하면 분쟁의 해결을 위하여 성실히 임해야 하며, 불성실하게 분쟁해결 절차에 임함으로써 "제휴판매자" 및 "회사"에 손실과 손해가 발생하면 그에 대한 모든 책임을 부담하여야 합니다.

"이용자"는 재화 또는 용역을 구매할 경우에는 본인 명의의 결제수단을 사용하여야 하고, 타인의 결제수단을 임의로 사용하여서는 아니 되며, 타인의 결제수단을 임의로 사용하여 "회사", "제휴판매자" 및 해당 결제수단 소유자에게 발생하는 손실 또는 손해 등에 대한 모든 책임을 부담합니다.

"이용자"는 매매대금의 결제와 관련하여 이용자가 입력한 정보 및 그 정보와 관련하여 발생하는 제반 문제에 대한 모든 책임을 부담합니다.

"회사"는 "이용자"의 매매대금 결제 시 해당 결제수단에 대하여 정당한 사용권한이 있는지 확인할 수 있고, 이에 대한 확인이 완료될 때까지 해당 거래의 진행을 중지하거나 해당 거래를 취소할 수 있습니다.

"회사"는 "이용자"에게 서비스가 안전하게 제공될 수 있도록 정보를 관리하고, 서비스가 제공 목적에 맞게 이용되고 있는지 확인합니다. 이 경우 "이용자"에게 이용 목적에 위반되는 부분이 있는 것으로 확인되면 사유의 소명을 요청할 수 있고, 청약취소 등 필요한 조치를 할 수 있습니다.

"회사"는 당사가 "이용자"의 서비스 이용 편의를 높이기 위하여 "제휴판매자" 등으로부터 재화 또는 용역 등 관련 정보를 제공받아 게재하거나 제3자가 제공하는 방식으로 "플랫폼"을 통하여 참조용 상품정보나 관련 콘텐츠를 제공하는 경우에도 해당 재화 또는 용역의 구매와 관련하여 자신의 판단과 책임으로 결정하여야 합니다. 이 경우 "회사"는 어떠한 경우에도 "이용자"의 구매결정에 대하여 책임을 부담하지 아니 합니다.
제16조 통신판매자로서의 책임
"회사"가 직접 "이용자"에게 재화 등을 판매하는 경우, "회사"는 통신판매의 당사자로서 책임을 부담하며, 이 경우 "회사"는 본 약관 제22조, 제23조, 제26조 및 제38조의 "제휴판매자"로 간주되어 "이용자"에게 동 약관에 따른 책임을 부담합니다.
제17조 결제수단
“플랫폼" 에서 제공하는 서비스를 이용하는 것에 대한 결제방법은 다음 각 호의 방법 중 가용한 방법으로 할 수 있습니다.

인터넷뱅킹 등의 각종 계좌이체

선불카드, 직불카드, 신용카드 등의 각종 카드 결제

온라인무통장입금

전자화폐에 의한 결제 (간편 결제 등)

수령 시 대금지급 (현장결제 등)

기타 전자적 지급 방법에 의한 대금 지급 등
제18조 취소,변경,환불 등

서비스 이용에 대한 취소 및 환불규정은 전자상거래 등에서의 소비자보호에 관한 법령을 준수합니다.

“제휴판매자" 는 별도의 취소 및 환불규정을 제정할 수 있으며 이를 상세페이지에 기재하고 “이용자" 의 동의를 받은 경우 우선 적용됩니다. (단 필수 동의 항목인 "취소/환불 규정 동의"는 "캠핑장 운영 정책"의 취소/환불규정의 내용보다 우선 적용 됩니다.)

“회사" 는 “제휴판매자”에게 전 2항의 규정이 없는 경우를 위하여 시설 별 취소환불규정을 제정할 수 있으며 이를 상세페이지에 기재하고 “이용자" 의 동의를 받아 적용합니다.

서비스 이용에 관한 개별 안내, 상품 등에 대한 정보, 예약 시 유의사항, 취소, 환불 정책 등은 개별 서비스 이용 안내, 소개 등을 통해 제공 되고 있습니다.

회원은 전항의 안내, 소개 등을 충분히 숙지하고 서비스를 이용하여야 합니다. 회사는 통신판매중개자로서 통신판매의 당사자가 아니고, 판매자가 상품 등 이용에 관한 이용정책이나 예약에 관한 취소, 환불 정책을 별도로 운영하는 경우가 있을 수 있으므로, 회원은 상품 등 이용 또는 예약 시 반드시 그 내용을 확인해야 합니다. 회원이 이 내용을 제대로 숙지하지 못해 발생한 피해에 대해서는 회사가 책임을 부담하지 않습니다.
제19조 개별 서비스 약관 및 이용조건

“회사" 는 제휴 업체에 관련한 별도의 약관 및 이용정책을 둘 수 있으며, 제휴 업체에서 별도로 적용되는 약관 및 정책에 대해 “이용자"가 별도의 동의절차를 거치게 됩니다. 이 경우 제휴 업체에 대한 약관 및 정책이 본 약관에 우선합니다. (단, 취소/환불 규정은 제외, 필수 동의 항목인 "취소/환불 규정 동의" 내용에 따름)

전항에도 불구하고 “회사" 는 개별 서비스에 대한 이용정책에 대해서는 “서비스" 를 통해 공지할 수 있으며, “이용자" 는 이용정책을 숙지하고 준수하여야 합니다.
제20조 대리 및 보증의 부인

“회사”는 관련 법령에 따라 “회사"가 책임을 부담하는 경우를 제외하고는 통신판매중개자로서 통신판매중개 서비스의 제공을 위한 “플랫폼” 등의 운영 및 관리 책임만을 부담하고, “플랫폼”에서의 “제휴판매자”와 “이용자” 간의 상품의 거래와 관련하여 ”제휴판매자” 또는 “이용자”를 대리하지 아니하며, ”제휴판매자”와 “이용자” 간의 상품 거래에 관한 위험과 책임은 해당 ”제휴판매자”와 “이용자”가 직접 부담합니다.

“회사”는 관련 법령에 따라 “회사"가 책임을 부담하는 경우를 제외하고는 “사이트”에서의 ”제휴판매자”와 “이용자” 간의 상품 거래와 관련하여 거래당사자의 판매의사 또는 구매의사의 존부 및 진정성, 상품의 품질, 완전성, 안정성, 적법성 및 타인의 권리에 대한 비침해성, ”제휴판매자”가 제공하거나 등록한 정보 및 자료의 진실성 또는 적법성 등을 보증하지 아니하며, “제휴판매자”와 “이용자” 간의 상품 거래에 관한 위험과 책임은 해당 ”제휴판매자”와 “이용자”가 직접 부담합니다.
제21조 청약 체결
캠핑장 예약 상품은 아래의 각 호에 모두 해당 할 경우 청약 체결이 완료 됨으로 간주 합니다.

“회원" 혹은 “비회원" 계정으로 예약 가능한 캠핑장, 캠핑존, 사이트, 일정 등의 예약정보를 정확히 선택한 경우

“제휴 판매자"가 정한 별도의 약관 및 이용 정책 (이하 “캠핑장 운영정책" 이라 한다.)에 동의 한 경우

“회사"에서 정한 약관에 모두 동의 한 경우

캠핑장 운영 정책

캠핑장 취소/환불규정 동의

개인정보 수집 및 이용 동의

개인정보 제 3자 제공 동의

만 14세 이상 이용 동의

“회사"에서 정한 결제 수단(카드 결제 및 무통장 입금)으로 총 결제 금액을 결제 혹은 입금 처리 한 경우

예약 완료 안내 메시지를 수신하거나, 편안차박 앱 내 예약 내역에서 예약 완료 상태로 확인 된 경우
제22조 캠핑 예약서비스에 대한 특칙 (허위 구매의 규제) 

"회사"는 선량한 "이용자"의 보호를 위하여 다음에 해당하는 "이용자"에 대하여 일정한 기간을 정하여 예약 제한 또는 해당 예약 건에 대한 취소 조치를 취할 수 있습니다.

◦ 부정한 방법을 통한 예약의 경우(예. 매크로 이용 등 비정상적인 방법을 통한 예약)

◦ 반복적인 다량 구매 후 취소하는 경우(예. 재판매를 위하여 일정기간 동안 다량 구매 후 취소를 반복하는 경우)

◦ 암표매매의 목적으로 구매하거나 암표매매를 이미 한 경우(예. 구매한 예약 상품을 "회사"의 판매가보다 높은 가격을 받고 타에 판매하는 경우)

◦ 기타 이에 준하는 부정한 이용으로 판단되는 경우

상기 1항의 경우 "회사"는 해당 "이용자"에게 그 즉시 1일 이상의 소명기한을 부여하며, 그 기한 내 "이용자"부터 소명서를 제출할 경우 그 내용이 합당하다고 판단되면 해당 조치를 해지할 수 있습니다.

"회원"이 본 조에 해당하는 행위를 지속적으로 행함으로써 회사 또는 다른 이용자에게 피해를 주는 것으로 판단되는 경우 회사는 제14조에 따라 회원자격을 제한, 정지 및 상실시킬 수 있습니다.

회사는 이용자가 본 조 제1항에서 규정한 방법으로 구매하지 않았더라도, 다른 "이용자"의 원활한 예약 및 취소에 지장을 초래하는 행위가 확인된 경우 "회사"는 제12조에 따라 회원 자격을 제한, 정지 및 상실시킬 수 있습니다.
제23조 서비스의 내용

“회사”가 이 약관에 따라 “이용자”에게 제공하는 "스토어 서비스"는 다음 각 호와 같습니다.

◦ 상품 거래를 위한 오픈마켓 "플랫폼" 운영 서비스

◦ “플랫폼”의 개발 및 운영 서비스

◦ 상품 구매 관련 업무 지원 서비스

◦ 상품 정보 검색 서비스

◦ 기타 전자상거래와 관련하여 “회사”가 정하는 서비스

“회사”가 제공하는 "스토어 서비스"의 범위는 “플랫폼”에서 “제휴판매자”와 “이용자”가 상품을 원활하게 거래할 수 있도록 하는 것에 한정되며, “회사”는 ”제휴판매자”가 “사이트”에서 판매하는 상품에 관하여 책임을 지지 않습니다.
제24조 구매계약의 체결

“이용자”가 “상품”의 판매 조건에 응하여 청약의 의사를 표시하고 “제휴판매자”가 그에 대하여 승낙의 의사표시를 함으로써 “상품”에 대한 구매계약이 체결됩니다. 단, 구매계약을 체결한 “이용자”가 미성년자인 경우에는 법정대리인의 동의가 없는 한 그 “이용자” 또는 법정대리인이 구매계약을 취소할 수 있습니다.

”회사”는 “이용자”가 구매대금을 결제할 수 있는 방법을 제공합니다.

구매계약을 체결한 “이용자”는 구매대금의 결제 및 “상품”의 배송과 관련하여 자신이 입력한 정보에 대한 책임 및 불이익을 전적으로 부담하여야 합니다.

구매계약을 체결한 “이용자”가 구매계약을 체결한 후 일정 기간 내에 구매대금을 결제하지 않을 경우 “회사”는 “이용자”의 동의 없이 해당 주문을 취소할 수 있습니다.

“회사”는 “이용자”가 구매계약 체결 내용을 확인할 수 있도록 조치하며, 구매계약의 취소 방법 및 절차를 안내합니다.

“회사”는 구매계약에 대하여 다음 각 호 중 하나를 확인할 수 있으며, 이에 대한 확인이 완료될 때까지 거래진행을 중지하거나, 확인이 불가한 거래는 취소할 수 있습니다.

◦ “이용자”가 구매대금 결제 시 사용한 결제수단에 대한 정당한 사용권한 보유하였는지 여부

◦ “이용자”가 “상품”의 구매 자격을 충족하는지 여부

◦ 제31조의 금지 행위에 해당하는지 여부
제25조 결제 대금 예치 등(구매 안전 서비스)

“회사”는 “제휴판매자”와 “이용자” 간에 안전한 거래가 이루어질 수 있도록 구매안전서비스(선지급식 통신판매에 있어서 "이용자"가 지불한 구매대금을 예치하였다가 배송이 완료되면 “회사”는 사전에 합의된 판매수수료를 공제한 나머지 금액을 “제휴판매자”에게 지급하거나, 배송이 완료되지 않거나 “상품”이 환불되는 등의 경우 "이용자"가 지불한 구매대금을 다시 돌려주는 서비스)를 제공합니다.

“회사”는 “플랫폼”에서 판매되는 모든 “상품”에 구매안전서비스를 적용합니다.

“회사”는 구매안전서비스를 통하여 “이용자” 또는 "제휴판매자"의 권리와 의무를 대리하거나 대행하지 아니합니다.
제26조 배송 및 거래완료

"회사"는 "제휴판매자"와 "이용자"간 거래 및 배송 등과 관련하여 "제휴판매자", "이용자", 배송업체 등 관련 당사자 사이에 분쟁 등이 발생하는 경우에는 이에 관여하지 않으며 어떠한 책임도 부담하지 아니합니다. 이 경우 해당 분쟁 등은 관련 당사자가 직접 해결하여야 합니다.

"회사"는 구매결정이 이루어진 이후에 상품 등의 하자 등 결제대금의 환불사유가 발생하는 경우에는 이에 개입하지 아니합니다.

구매확정 이후에 발생하는 "제휴판매자"와 "이용자"간 모든 분쟁은 거래 당사자인 "제휴판매자"와 "이용자"가 해결하여야 합니다.

"회사"는 구매확정 기간 내에 구매확정, 교환 또는 반품에 대한 의사표시가 없는 경우에는 해당 거래에 대하여 "이용자"의 구매확정 의사표시가 있는 것으로 간주하여 자동구매확정으로 처리할 수 있습니다.

"이용자"는 구매확정 등의 의사표시를 하였거나 자동구매확정이 이루어진 경우에는 "회사"에 대하여 상품 등 미수령, 반품 등의 사유로 이의를 제기할 수 없습니다. 이 경우 상품 등 구매대금의 환불, 상품 등의 교환 등 모든 문제는 "제휴판매자"와 직접 해결해야 합니다.
제27조 긴급 조치

“회사”는 “이용자”가 위법, 불법, 타인의 권리 침해 그 밖에 부당한 목적을 위해 서비스를 이용한다고 판단하는 경우 그 “이용자”의 관련된 물품의 수취나 배송을 거절할 권리를 가집니다.

“회사”가 제공하는 재화 등이 관할 관청 또는 당국에 의해 제재를 받았을 때 "회사"는 해당 재화 등을 관할 관청 또는 당국에 인도하는 것을 원칙으로 합니다. 이로 인하여 “이용자”이 손해를 입었다고 할지라도 해당 손해에 대해서 "회사"는 일체의 책임을 지지 않으며 또한 “이용자”는 해당 물품에 대한 서비스 이용요금 및 관련비용 등의 지급의무를 면하지 아니합니다.

"회사"의 주소로 배송된 물품에 악취, 액체 누수 등 그 밖에 정당한 사유가 있다고 인정이 되어 긴급을 필요로 하는 경우 "회사"는 “이용자”에게 해당 사실을 통지하고 해당 물품을 별도 장소로 이동 보관하는 등 임시조치를 취할 수 있습니다. 이로 인해 발생하는 추가비용은 “이용자”이 부담하여야 하며 또한 “이용자”에게 손해가 발생하더라도 해당 손해에 대하여 책임을 지지 않습니다.
제28조 청약철회

"제휴판매자"와 재화 등의 구매에 관한 계약을 체결한 '"이용자")는 『전자상거래 등에서의 소비자 보호에 관한 법률』 제13조 제2항에 따른 계약내용에 관한 서면을 받은 날(그 서면을 받은 때보다 재화 등의 공급이 늦게 이루어진 경우에는 재화 등을 공급받거나 재화 등의 공급이 시작된 날을 말함)부터 7일 이내에는 청약을 철회할 수 있습니다. 다만, 청약철회에 관하여 『전자상거래 등에서의 소비자 보호에 관한 법률』에 달리 정함이 있는 경우에는 동 법 규정에 따릅니다.

"이용자"는 재화 등을 배송 받고 다음 각 호에 해당하는 경우에는 반품 및 교환을 할 수 없습니다.

"이용자"에게 책임이 있는 사유로 재화 등이 멸실 또는 훼손된 경우(다만 재화 등의 내용을 확인하기 위하여 포장 등을 훼손한 경우는 제외)

"이용자"의 사용 또는 일부 소비로 재화 등의 가치가 현저히 감소한 경우

시간이 지나 다시 판매하기 곤란할 정도로 재화 등의 가치가 현저히 감소한 경우

복제가 가능한 재화 등의 포장을 훼손한 경우

용역 또는 『문화산업진흥 기본법』 제2조제5호의 디지털콘텐츠의 제공이 개시된 경우(다만, 가분적 용역 또는 가분적 디지털콘텐츠로 구성된 계약의 경우에는 제공이 개시되지 아니한 부분에 대하여는 제외)

주문에 따라 개별적으로 생산되는 재화 등 그에 대하여 청약철회 등을 인정할 경우 "제휴판매자"에게 회복할 수 없는 중대한 피해가 예상되는 경우로서, 사전에 해당 거래에 대하여 별도로 그 사실을 고지하고 "이용자"의 서면(전자문서를 포함)에 의한 동의를 받은 경우

그 밖에 관련법령에 따른 반품 및 교환 제한 사유에 해당되는 경우

제2항 제2호 내지 제4호의 경우에는 "제휴판매자"가 사전에 청약 철회 등이 제한되는 사실을 "이용자"가 쉽게 알 수 있는 곳에 명기하거나 사용 상품을 제공하는 등의 조치를 하지 않았다면 "이용자"의 청약 철회 등이 제한되지 않습니다.

"이용자"는 제1항 및 제2항에도 불구하고 재화 등의 내용이 표시·광고의 내용과 다르거나 계약내용과 다르게 이행된 경우에는 그 재화 등을 공급받은 날부터 3개월 이내, 그 사실을 안 날 또는 알 수 있었던 날부터 30일 이내에 청약철회 등을 할 수 있습니다.

"회사"는 "이용자"로부터 교환 또는 반품의 의사표시를 받은 경우에는 즉시 그 사실을 "제휴판매자"에게 통보합니다.

"이용자"는 제1항 또는 제4항에 따라 교환신청을 하더라도 "제휴판매자"에게 교환할 재화 등의 재고가 없는 경우에는 해당 재화 등의 교환을 받을 수 없습니다. 이 경우 해당 교환신청은 반품으로 처리됩니다. ➆ 반품이나 교환에 필요한 배송비 및 기타 비용은 귀책사유가 있는 당사자가 부담합니다. 재화 등의 하자 또는 오배송으로 인한 반품이나 교환의 경우에는 "제휴판매자"가 그 비용을 부담하지만, "이용자"의 단순 변심으로 인한 반품이나 교환의 경우에는 "이용자"가 그 비용을 부담하오니 유의하여 주시기 바랍니다.

"제휴판매자"는 "이용자"가 배송상의 문제로 손해를 입은 경우에는 그에 대한 책임을 부담합니다.

"회사"는 "제휴판매자"가 "이용자"의 결제완료 통지를 받은 이후에도 상당 기간 배송 절차 등을 이행하지 아니하여 "이용자"가 청약철회 등을 하거나 개별적인 정책으로 미리 정한 자동환불처리 사안에 해당하는 경우에는 해당 거래를 취소하고 이용 중인 결제대금예치서비스를 통해 이용자에게 결제대금을 환불할 수 있습니다.

"이용자"가 교환 또는 반품신청을 한 날로부터 14일이 지날 때까지 이미 수령한 재화 등을 "제휴판매자"에게 반환하지 아니하거나 전화, 이메일 등으로 연락이 되지 아니하는 경우에는 해당 "이용자"의 교환 또는 반품신청은 효력을 상실합니다.

"제휴판매자"가 청약철회 등으로 인하여 결제대금을 환불하는 경우에는 그 청약철회 등을 한 날(단, 재화 등이 배송된 경우에는 "제휴판매자"가 재화 등을 반환 받은 날)로부터 3영업일 이내에 "제휴판매자"는 환불에 필요한 조치를 합니다. 신용카드로 결제가 이루어진 경우 환불은 해당 신용카드 결제 취소를 통해서만 가능하고, 어떠한 경우에도 현금으로 환불되지 않습니다.
제29조 금지행위
“이용자”는 다음과 같은 행위를 하여서는 안 됩니다.

자신 또는 제3자의 ID를 이용하여 직접 사용을 위한 의사 없이(직접 사용의 증거를 제시하지 못한 경우를 포함함) 재판매 목적 또는 환불 정책, 이용자 보상 정책, 판매량 표시 증가 등을 이용한 부당한 이익 취득을 위한 목적으로 “플랫폼”에서 자신 또는 제3자의 상품을 반복적으로 또는 대량으로 구매하거나 구매한 것처럼 보이도록 하는 행위, 그러한 행위를 교사 또는 방조하는 행위, 기타 단독으로 또는 제3자와 공모하여 "스토어 서비스"를 부정하게 또는 비정상적으로 이용하여 자신 또는 제3자가 부당한 이득을 취하게 하고 “회사” 또는 타인에게 손해 또는 손실을 입히는 행위

“플랫폼”에서 판매 중인 상품에 대하여 “제휴판매자”와 “플랫폼” 또는 "스토어 서비스"를 배제하는 형태의 거래(이하 “직거래”라 합니다)를 하거나, “제휴판매자”에게 “직거래”를 제안하거나, “제휴판매자”의 그러한 제안을 수락하는 행위

타인의 명의나 정보(개인정보, 카드정보, 계좌정보 등을 포함하며 이에 한정되지 않음)을 도용하여 "스토어 서비스"를 이용하는 행위

여신전문금융업법 등 각종 법령을 위반하여 비정상적인 결제를 하거나 기타 “회사”의 시스템을 비정상적으로 이용하는 행위

“회사” 또는 “제휴판매자”의 상담원 기타 임직원에 대한 폭행, 협박, 욕설, 성희롱 등 산업안전보건법 기타 관련 법령에 위배되는 행위

기타 본 조 각 호의 어느 하나 또는 그 이상에 해당한다는 합리적인 의심(정당한 권리자로부터 신고가 접수된 경우를 포함함)이 있어 “회사”가 “이용자”에게 그에 대한 소명 및 객관적인 입증자료를 요청하였음에도 불구하고, “이용자”가 그에 대한 소명 또는 객관적인 입증자료를 제출하지 못하거나 허위의 소명 또는 자료를 제출하는 행위
제30조 콘텐츠에 대한 운영

회원 탈퇴 이후 "회원"이 작성하였던 게시물 및 댓글 등은 삭제되지 않으며, 회원 탈퇴로 인하여 회원 정보가 삭제되어 작성자 본인을 확인할 수 없어 게시물 편집 및 삭제가 원천적으로 불가합니다. "회원"이 작성한 게시물의 삭제를 원할 경우에는 회원 탈퇴 이전에 게시물을 모두 삭제해야 합니다.

"회원"이 작성한 게시물에 대한 모든 권리 및 책임은 이를 게시한 "회원"에게 있으며, "회사"는 "회원"이 게시하거나 등록하는 서비스의 내용물이 다음 각 항에 해당한다고 판단되는 경우에 사전통지 없이 임시조치 및 삭제할 수 있고, 이에 대하여 회사는 어떠한 책임도 지지 않습니다.

공서양속에 위반되는 내용일 경우

동의없이 타인의 정보를 게시물에 노출한 경우

범죄적 행위에 결부된다고 인정되는 경우

회사의 저작권, 제3자의 저작권 등 기타 권리를 침해하는 내용일 경우

동일한 내용을 중복하여 다수 게시하는 등 게시의 목적에 어긋나는 경우

회사에서 규정한 게시물 원칙에 어긋나거나, 게시물을 작성하는 위치에 부여된 성격에 부합하지 않는 경우

사업주 변경 또는 인테리어공사 등에 따른 권리자(사업주)의 게시물 중단 또는 삭제가 있는 경우

정당한 사유 없이 당사의 영업을 방해하는 내용을 기재하는 경우

타인을 비방할 목적으로 허위 사실을 유포하여 타인의 명예를 훼손하는 글 또는 타인을 비방하는 게시물의 경우

기타 관련법령에 위반된다고 판단되는 경우

"회사"는 1항에 따른 권리자의 요청이 없는 경우라도 회사 또는 제3자의 권리침해가 인정될 만한 사유가 있거나 기타 회사 정책 및 관련법에 위반되는 경우에는 관련법에 따라 해당 게시물에 대해 임시조치(블라인드) 및 삭제 등의 조치를 취할 수 있습니다.
제31조 콘텐츠의 저작권 등

"회원"이 서비스 내에 게시한 게시물(회원간 전달 포함)의 저작권은 "회원"에게 있으며, 저작권법에 의해 보호를 받습니다. "회사"가 작성한 게시물에 대한 저작권 및 기타 지적재산권은 "회사"에 귀속합니다.

"회원"은 자신이 서비스 내에 게시한 게시물을 "회사"가 국내·외에서 다음 각 호의 목적으로 사용하는 것을 허락하며, "회사"가 서비스 내 게재 이외의 목적으로 "회원"의 게시물을 사용할 경우 게시물에 대한 게시자를 반드시 명시합니다. 단, 게시자를 알 수 없는 익명 게시물이나 비영리적인 경우에는 그러하지 아니합니다.

◦ 서비스(제3자가 운영하는 사이트 또는 미디어의 일정 영역 내에 입점하여 서비스가 제공되는 경우 포함) 내에서 게시물을 사용하기 위하여 게시물의 크기를 변환하거나 단순화하는 등의 방식으로 수정하는 것

◦ "회사" 또는 관계사가 운영하는 본 서비스 및 연동 서비스 에 게시물을 복제ㆍ전송ㆍ전시하는 것. 다만, "회원"이 게시물의 복제ㆍ전송ㆍ전시에 반대 의견을 E-mail을 통해 관리자에게 통지할 경우에는 그러하지 않습니다.

◦ "회사"의 서비스를 홍보하기 위한 목적으로 미디어, 소셜미디어를 포함한 디지털 마케팅 채널, 통신사 등에게 게시물의 내용을 보도, 방영하게 하는 것

"회원"이 서비스에 게시물을 게재하는 것은 다른 "회원"이 게시물을 서비스 내에서 사용하거나, "회사"가 검색결과로 사용하는 것을 허락한 것으로 봅니다

"회사"는 "회원"이 서비스 내에 게시한 게시물이 타인의 저작권, 프로그램 저작권 등을 침해하더라도 이에 대한 민, 형사사상의 책임을 부담하지 않습니다. 만일 "회원"이 타인의 저작권, 프로그램저작권 등을 침해하였음을 이유로 회사가 타인으로부터 손해배상청구 등 이의 제기를 받은 경우 "회원"은 "회사"의 면책을 위하여 노력하여야 하며, "회사"가 면책되지 못한 경우 "회원"은 그로 인해 회사에 발생한 모든 손해를 부담하여야 합니다.
제32조 플랫폼과 연결된 사이트와의 관계

“플랫폼" 과 연결된 “사이트" 란 하이퍼링크(예: 하이퍼링크의 대상에는 문자, 그림 및 동화상 등이 포함됨) 방식 등으로 연결된 경우를 말합니다.

“플랫폼" 과 연결된 “사이트" 가 독자적으로 제공하는 재화 등에 의하여 “이용자" 와 행하는 거래에 대해서 보증 책임을 지지 않는다는 뜻을 “플랫폼" 의 초기화면 또는 연결되는 시점의 팝업화면으로 명시한 경우에는 그 거래에 대한 보증 책임을 지지 않습니다.

“플랫폼" 에서 제공되는 서비스 외에 “플랫폼" 과 단순한 링크로 연결되어 제3자가 제공하는 서비스에 대하여는 “회사" 의 개인정보처리방침이 적용되지 않으며 “회사" 는 제3자의 사이트에 대하여 책임지지 않습니다
제33조 거래 기록의 보관
거래 기록은 전자상거래 등에서의 소비자 보호에 관한 법률 규정에 의해 일정기간 동안 보존할 수 있습니다.
제34조 수신확인 통지, 서비스 이용 변경 및 취소

“플랫폼" 은 “이용자" 의 서비스이용신청이 있는 경우 “이용자" 에게 수신확인통지를 합니다.

수신확인통지를 받은 “이용자" 는 의사표시의 불일치 등이 있는 경우에는 수신확인통지를 받은 후 즉시 서비스이용에 대한 변경 및 취소를 요청할 수 있고 “플랫폼" 은 “이용자" 가 동의한 시설별 이용규정 및 취소환불규정 등의 규제범위 이내에서 처리하여야 합니다.
제35조 면책

“회사" 는 “제휴판매자" 와 “이용자" 간의 상품거래를 중개하는 플랫폼 서비스만을 제공할 뿐, “재화" 를 판매하는 당사자가 아니며, “재화" 에 대한 정보 및 배송, 하자 등에 대한 책임은 “제휴판매자" 에게 있습니다.

“회사" 는 “제휴판매자" 가 게재한 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 관해서는 책임을 지지 않습니다.

“회사" 는 천재지변 또는 이에 준하는 불가항력으로 인하여 “서비스" 를 제공할 수 없는 경우에는 서비스 제공에 관한 책임이 면제됩니다.

“회사" 는 “이용자" 의 귀책사유로 인한 “서비스” 이용의 장애에 대하여는 책임을 지지 않습니다.

“회사" 는 “이용자" 가 게재한 이용후기 등 정보/자료/사실의 신뢰도, 정확성에 대해서는 책임을 지지 않습니다.

“회사" 는 제3자가 서비스 내 화면 또는 링크된 웹사이트를 통하여 광고한 제품 또는 서비스의 내용과 품질에 대해서 감시할 의무가 없으며, 이와 관련한 기타 어떠한 책임도 지지 않습니다. ➆ “회사" 는 “이용자" 가 서비스를 이용하여 기대하는 수익을 상실한 것에 대하여 책임을 지지 않으며, 그 밖의 서비스를 통하여 얻은 자료로 인한 손해에 관하여 책임을 지지 않습니다.

“회사" 는 “이용자" 간 또는 “이용자" 와 제3자 상호간에 서비스를 매개로 하여 거래 등을 한 경우에는 책임이 면제됩니다.

“회사" 및 “회사" 의 임직원 그리고 대리인은 고의 또는 중대한 과실이 없는 한 다음과 같은 사항으로부터 발생하는 손해에 대해 책임을 지지 않습니다.

회원 정보의 허위 또는 부정확성에 기인하는 손해

서비스에 대한 접속 및 서비스의 이용과정에서 “이용자" 의 귀책사유로 발생하는 손해

서버에 대한 제3자의 모든 불법적인 접속 또는 서버의 불법적인 이용으로부터 발생하는 손해 및 제3자의 불법적인 행위를 방지하거나 예방하는 과정에서 발생하는 손해

제3자가 서비스를 이용하여 불법적으로 전송, 유포하거나 또는 전송, 유포되도록 한 모든 바이러스, 스파이웨어 및 기타 악성 프로그램으로 인한 손해

회사는 보호자가 동반하지 않은 미성년자의 숙박시설 이용으로 발생하는 숙박시설로부터의 입실 거부, 예약취소, 환불 불가 등의 불이익에 관하여 책임지지 않습니다.

"회사"는 "이용자"와 "제휴판매자"의 모든 행위(거래행위 포함)와 관련하여 판매의사 또는 구매의사의 존부 및 진정성, 등록 상품 등의 품질, 완전성, 안정성, 적법성 및 타인의 권리에 대한 비침해성, "이용자" 또는 "제휴판매자"가 입력하는 정보 및 그 정보를 통하여 링크된 URL에 게재된 자료의 진실성 또는 적법성 등 일체에 대하여 보증하지 아니하며, 이와 관련된 일체의 위험과 책임은 해당 당사자가 부담합니다.
제36조 분쟁해결

"회사"는 "이용자"를 위하여 "이용자"와 "제휴판매자" 사이에서 중재역할을 합니다. 또한, "회사"는 "이용자"가 제기하는 정당한 의견이나 불만을 반영하고 처리하기 위한 인력 및 설비를 갖추고, 운영합니다. "회사"는 "이용자"로부터 제출되는 의견 및 불만사항의 신속한 처리가 곤란한 경우에는 "이용자"에게 그 사유와 처리일정을 통보해야 합니다.

본 사이트 서비스와 관련하여 궁금하신 사항이 있으시다면 언제든지 고객센터(대표번호 : 010-2493-4475 / 운영시간: 10시 00분 ~ 18시 00분) 으로 문의 주시기 바랍니다.
제37조 재판권 및 준거법

“회사" 와 “이용자" 간에 발생한 분쟁에 관한 소송은 “회사" 의 주소지를 관할하는 법원을 관할법원으로 정합니다.

“회사"와 “이용자" 간에 제기된 전자상거래 소송에는 한국법을 적용합니다.
부 칙
본 약관은 2024년 12월 1일부터 시행합니다.
''';

  // Form data variables
  String? _gender;
  final String _age = '';
  final bool _hasCar = false; // 자차 보유 여부
  final String _campingExperience = '시작 전';
  final List<String> _selectedHobbies = []; // 취미 선택
  List<String> hobbyOptions = ['낚시', '등산', '수영']; // 취미 옵션 리스트

  // List of options
  List<String> campingOptions = [
    '시작 전',
    '3개월 미만',
    '6개월 미만',
    '1년 미만',
    '3년 미만',
  ];

  final ScrollController _scrollController = ScrollController();

  // Firebase 회원가입 메서드
  void _register() async {
    if (_formKey.currentState!.validate()) {
      try {
        UserCredential userCredential =
            await FirebaseAuth.instance.createUserWithEmailAndPassword(
          email: _emailController.text,
          password: _passwordController.text,
        );

        // Firebase Realtime Database에 사용자 정보 저장
        DatabaseReference userRef = FirebaseDatabase.instance
            .ref('users')
            .child(userCredential.user!.uid);

        await userRef.set({
          'nickname': _nicknameController.text,
          'description': _descriptionController.text, // 설명 문구 저장
          'email': _emailController.text,
          'gender': _gender,
          'age': _age,
          'hasCar': _hasCar,
          'campingExperience': _campingExperience,
          'hobbies': _selectedHobbies, // 취미 데이터 저장
        });

        Navigator.pop(context);
        ScaffoldMessenger.of(context)
            .showSnackBar(const SnackBar(content: Text('회원가입 성공!')));
      } on FirebaseAuthException catch (e) {
        String message;
        if (e.code == 'email-already-in-use') {
          message = '아이디가 이미 존재합니다.';
        } else {
          message = '회원가입 실패: ${e.message}';
        }
        ScaffoldMessenger.of(context)
            .showSnackBar(SnackBar(content: Text(message)));
      }
    }
  }

  @override
  void initState() {
    super.initState();
    _scrollController.addListener(_scrollListener);
  }

  @override
  void dispose() {
    _scrollController.removeListener(_scrollListener);
    super.dispose();
  }

  // 스크롤 리스너
  void _scrollListener() {
    _dropDownController.hide();
  }

  @override
  Widget build(BuildContext context) {
    ScreenUtil.init(context, designSize: const Size(360, 800));

    return GestureDetector(
      onTapDown: (details) {
        _dropDownController.hide();
      },
      child: Scaffold(
        body: SafeArea(
          child: SingleChildScrollView(
            controller: _scrollController,
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 16.w),
              child: Form(
                key: _formKey,
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    SizedBox(
                      height: 27.h,
                    ),
                    //Back 버튼
                    GestureDetector(
                      onTap: () {
                        Navigator.of(context).pop();
                      },
                      child: Image.asset(
                        'assets/images/ic_back.png',
                        width: 24.w,
                        height: 24.h,
                      ),
                    ),
                    SizedBox(
                      height: 27.h,
                    ),
                    //회원가입 타이틀
                    Container(
                      margin: EdgeInsets.only(left: 5.w),
                      child: Text(
                        '회원가입',
                        style: TextStyle(
                          color: Colors.black,
                          fontSize: 20.sp,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                    SizedBox(
                      height: 18.h,
                    ),
                    //닉네임 타이틀
                    _buildSubTitle('닉네임'),
                    SizedBox(
                      height: 4.h,
                    ),
                    //닉네임 입력
                    Row(
                      children: [
                        _buildTextField(
                          controller: _nicknameController, // 컨트롤러 연결
                          hintText: '한글 또는 숫자를 이용한 8자리 이내', // 별명 → 닉네임으로 통일
                          width: 226,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '닉네임을 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                        SizedBox(
                          width: 8.w,
                        ),
                        Container(
                          width: 94.w,
                          height: 45.h,
                          alignment: Alignment.center,
                          decoration: BoxDecoration(
                            border: Border.all(
                              color: const Color(0xFF398ef3),
                              width: (0.8).w,
                            ), // 테두리 유지
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(12.r),
                          ),
                          child: Text(
                            '중복확인',
                            style: TextStyle(
                              color: const Color(0xFF398ef3),
                              fontSize: 14.sp,
                            ),
                          ),
                        ),
                      ],
                    ),
                    SizedBox(
                      height: 16.h,
                    ),
                    //닉네임 타이틀
                    Row(
                      children: [
                        _buildSubTitle('아이디'),
                        SizedBox(
                          width: 2.w,
                        ),
                        const Text(
                          '(4자리)',
                          style: TextStyle(
                            color: Color(0xFFA0A0A0),
                            fontSize: 12,
                            fontWeight: FontWeight.w400,
                          ),
                        )
                      ],
                    ),
                    SizedBox(
                      height: 4.h,
                    ),
                    //닉네임 입력
                    Row(
                      children: [
                        _buildTextField(
                          controller: _idController, // 컨트롤러 연결
                          hintText: '아이디 (숫자 4자리 입력)',
                          width: 226,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '아이디를 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                        SizedBox(
                          width: 8.w,
                        ),
                        Container(
                          width: 94.w,
                          height: 45.h,
                          alignment: Alignment.center,
                          decoration: BoxDecoration(
                            border: Border.all(
                              color: const Color(0xFF398ef3),
                              width: (0.8).w,
                            ), // 테두리 유지
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(12.r),
                          ),
                          child: Text(
                            '중복확인',
                            style: TextStyle(
                              color: const Color(0xFF398ef3),
                              fontSize: 14.sp,
                            ),
                          ),
                        ),
                      ],
                    ),
                    //비밀번호
                    SizedBox(
                      height: 16.h,
                    ),
                    //닉네임 타이틀
                    Row(
                      children: [
                        _buildSubTitle('비밀번호'),
                        SizedBox(
                          width: 2.w,
                        ),
                        Text(
                          '(4자리)',
                          style: TextStyle(
                            color: const Color(0xFFA0A0A0),
                            fontSize: 12.sp,
                            fontWeight: FontWeight.w400,
                          ),
                        )
                      ],
                    ),
                    SizedBox(
                      height: 4.h,
                    ),
                    //비밀번호 입력
                    Row(
                      children: [
                        _buildTextField(
                          obscureText: true,
                          controller: _passwordController, // 컨트롤러 연결
                          hintText: '비밀번호 (숫자 4자리 입력)',
                          width: 328,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '비밀번호를 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                      ],
                    ),
                    SizedBox(
                      height: 8.h,
                    ),
                    //비밀번호 확인 입력
                    Row(
                      children: [
                        _buildTextField(
                          obscureText: true,
                          controller: _confirmPasswordController, // 컨트롤러 연결
                          hintText: '비밀번호 확인',
                          width: 328,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '비밀번호를 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                      ],
                    ),

                    SizedBox(
                      height: 16.h,
                    ),
                    //이메일 타이틀
                    Row(
                      children: [
                        _buildSubTitle('이메일 주소'),
                        SizedBox(
                          width: 2.w,
                        ),
                      ],
                    ),
                    //이메일주소 입력
                    Row(
                      children: [
                        _buildTextField(
                          controller: _emailController, // 컨트롤러 연결
                          hintText: 'honggildong123',
                          width: 181,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '이메일을 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                        SizedBox(
                          width: 8.w,
                        ),
                        Image.asset(
                          'assets/images/ic_at.png',
                          width: 13.w,
                          height: 20.h,
                        ),
                        SizedBox(
                          width: 8.w,
                        ),
                        //이메일 도메인 선택
                        OverlayPortal(
                          controller: _dropDownController,
                          overlayChildBuilder: (context) {
                            RenderBox renderBox = _dropDownKey.currentContext!
                                .findRenderObject() as RenderBox;
                            Offset offset =
                                renderBox.localToGlobal(Offset.zero);

                            return Positioned(
                              left: offset.dx, // child의 X 위치
                              top: offset.dy, // child의 Y 위치에서 위로 100 픽셀
                              child: _buildDrowDown(),
                            );
                          },
                          child: GestureDetector(
                            key: _dropDownKey,
                            onTap: () {
                              _dropDownController.show();
                            },
                            child: Container(
                              width: 118.w,
                              height: 45.h,
                              padding: EdgeInsets.only(
                                  left: 15.w), // 입력 필드 오른쪽으로 이동을 위해 패딩 조정 가능
                              decoration: BoxDecoration(
                                border: Border.all(
                                  color: const Color(0xFFd3d3d3),
                                  width: (0.8).w,
                                ), // 테두리 유지
                                color: const Color(0xFFf8f8f8),
                                borderRadius: BorderRadius.circular(12.r),
                              ),
                              child: Row(
                                children: [
                                  Align(
                                    alignment: Alignment.centerLeft,
                                    child: Text(
                                      selectedEamil,
                                      style: TextStyle(
                                        fontSize: 12.sp,
                                        color: const Color(0xFFa0a0a0),
                                        fontWeight: FontWeight.w400,
                                      ),
                                    ),
                                  ),
                                  const Spacer(),
                                  Image.asset(
                                    'assets/images/ic_down.png',
                                    width: 5.w,
                                    height: 10.h,
                                  ),
                                  SizedBox(
                                    width: 13.w,
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                    //휴대폰 번호
                    SizedBox(
                      height: 16.h,
                    ),
                    //닉네임 타이틀
                    Row(
                      children: [
                        _buildSubTitle('휴대폰번호'),
                      ],
                    ),
                    SizedBox(
                      height: 4.h,
                    ),
                    //휴대폰번호 입력
                    Row(
                      children: [
                        _buildTextField(
                          controller: _phoneController, // 컨트롤러 연결
                          hintText: '',
                          width: 328,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return '휴대폰번호를 입력해주세요';
                            }
                            return null;
                          },
                          cursorColor: const Color(0xFF398EF3),
                        ),
                      ],
                    ),
                    //약관
                    SizedBox(
                      height: 13.h,
                    ),
                    Row(
                      children: [
                        _buildSubTitle('약관동의'),
                      ],
                    ),
                    SizedBox(
                      height: 8.h,
                    ),
                    _buildTemrs(
                      termsUse,
                      "이용약관 (필수)",
                    ),
                    SizedBox(
                      height: 8.h,
                    ),
                    _buildTemrs(
                      termsPrivacy,
                      "개인 정보 수집 및 활용 동의 (필수)",
                    ),
                    SizedBox(
                      height: 33.h,
                    ),
                    //회원가입 버튼
                    _buildRegisterButton(),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextField({
    TextEditingController? controller,
    required String hintText,
    required String? Function(String?) validator,
    required int width,
    bool obscureText = false,
    TextInputType keyboardType = TextInputType.text,
    Function(String)? onChanged,
    Color cursorColor = Colors.black,
  }) {
    return Container(
      width: width.w,
      height: 45.h,
      padding: EdgeInsets.only(left: 15.w), // 입력 필드 오른쪽으로 이동을 위해 패딩 조정 가능
      decoration: BoxDecoration(
        border: Border.all(
          color: const Color(0xFFd3d3d3),
          width: (0.8).w,
        ), // 테두리 유지
        color: const Color(0xFFf8f8f8),
        borderRadius: BorderRadius.circular(12.r),
      ),
      child: TextFormField(
        controller: controller,
        obscureText: obscureText,
        keyboardType: keyboardType,
        onChanged: onChanged,
        cursorColor: cursorColor,
        decoration: InputDecoration(
          border: InputBorder.none,
          hintText: hintText,
          hintStyle: TextStyle(
            fontSize: 12.sp,
            color: const Color(0xFFa0a0a0),
            fontWeight: FontWeight.w400,
          ),
          contentPadding: EdgeInsets.only(bottom: 13.h), // 글자를 상자 중앙으로 맞춤
        ),
        validator: validator,
      ),
    );
  }

  Widget _buildRegisterButton() {
    return GestureDetector(
      onTap: _register,
      child: Container(
        width: 328.w,
        height: 56.h,
        decoration: BoxDecoration(
          color: const Color(0xFF398EF3),
          borderRadius: BorderRadius.circular(12.r),
        ),
        child: Center(
          child: Text(
            '회원가입 하기',
            style: TextStyle(
              color: Colors.white,
              fontSize: 16.sp,
              fontWeight: FontWeight.w500,
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildSubTitle(String title) {
    return Container(
      margin: const EdgeInsets.only(left: 5),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              color: Colors.black,
              fontSize: 14,
              fontWeight: FontWeight.w400,
            ),
          ),
          Container(
            child: Image.asset(
              'assets/images/ic_red_start.png',
              width: 4,
              height: 10,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDrowDown() {
    return Container(
      width: 118.w,
      height: 135.h,
      decoration: BoxDecoration(
        border: Border.all(
          color: const Color(0xFFd3d3d3),
          width: 1.w,
        ), // 테두리 유지
        color: const Color(0xFFf8f8f8),
        borderRadius: BorderRadius.circular(12.r),
      ),
      child: ListView.separated(
        itemCount: dropDownItems.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              _dropDownController.hide();
              //이메일 선택 시 동작
              setState(() {
                selectedEamil = dropDownItems[index];
              });
            },
            child: Container(
              height: 44.h,
              alignment: Alignment.center,
              child: Text(
                dropDownItems[index],
                style: TextStyle(
                  fontSize: 14.sp,
                  fontWeight: FontWeight.w400,
                  color: const Color(0xFF777777),
                ),
              ),
            ),
          );
        },
        separatorBuilder: (context, index) {
          return Container(
            width: 118.w,
            height: (0.5).h,
            color: const Color(0xFFd3d3d3),
          );
        },
      ),
    );
  }

  Widget _buildTemrs(
    int type,
    String title,
  ) {
    return Container(
      height: 18.h,
      margin: EdgeInsets.fromLTRB(5.w, 0, 8.w, 0),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          GestureDetector(
            onTap: () {
              setState(() {
                if (type == termsUse) {
                  termsUseCheck = !termsUseCheck;
                } else {
                  termsPrivacyCheck = !termsPrivacyCheck;
                }
              });
            },
            child: Image.asset(
              (type == termsUse)
                  ? (termsUseCheck
                      ? 'assets/images/ic_check_box.png'
                      : 'assets/images/ic_uncheck_box.png')
                  : (termsPrivacyCheck
                      ? 'assets/images/ic_check_box.png'
                      : 'assets/images/ic_uncheck_box.png'),
              width: 16.h,
            ),
          ),
          SizedBox(
            width: 8.w,
          ),
          Container(
            alignment: Alignment.centerLeft,
            child: Text(
              title,
              textAlign: TextAlign.center,
              style: TextStyle(
                color: const Color(0xFF111111),
                fontSize: 12.sp,
                fontWeight: FontWeight.w400,
              ),
            ),
          ),
          const Spacer(),
          GestureDetector(
            onTap: () {
              showTermsDialog(type);
            },
            child: Text(
              '보기',
              textAlign: TextAlign.center,
              style: TextStyle(
                color: const Color(0xFFb4b4b4),
                fontSize: 12.sp,
                fontWeight: FontWeight.w800,
                decoration: TextDecoration.underline,
                decorationColor: const Color(0xFFb4b4b4), // 밑줄 색상
                decorationThickness: 1.h, // 밑줄 두께
              ),
            ),
          ),
        ],
      ),
    );
  }

  void showTermsDialog(int type) {
    showDialog(
      context: context,
      builder: (context) {
        return StatefulBuilder(
          builder: (context, dialogState) {
            return Material(
              color: Colors.transparent,
              child: Container(
                color: Colors.transparent,
                alignment: Alignment.center,
                child: Stack(
                  children: [
                    Container(
                      padding: EdgeInsets.fromLTRB(24.w, 24.h, 17.w, 16.h),
                      width: 328.w,
                      height: 405.h,
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(12.r),
                        color: Colors.white,
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Text(
                                '개인정보 처리 방침',
                                style: TextStyle(
                                    color: const Color(0xFF111111),
                                    fontSize: 16.sp,
                                    fontWeight: FontWeight.w500),
                              ),
                              const Spacer(),
                              GestureDetector(
                                onTap: () {
                                  Navigator.of(context).pop();
                                },
                                child: Image.asset(
                                  'assets/images/ic_close.png',
                                  width: 10.w,
                                  height: 10.w,
                                ),
                              ),
                            ],
                          ),
                          SizedBox(
                            height: 16.h,
                          ),
                          SizedBox(
                            height: 290.h,
                            child: RawScrollbar(
                              thumbVisibility: true, // 스크롤바 항상 표시
                              trackVisibility: true,
                              trackBorderColor: const Color(0xFFb4b4b4),
                              thickness: 2.w,
                              thumbColor: const Color(0xFF111111),
                              radius: Radius.circular(2.r),
                              child: SingleChildScrollView(
                                child: Container(
                                  padding: EdgeInsets.only(right: 18.w),
                                  child: Text(
                                    (type == termsUse)
                                        ? terms_use_text
                                        : terms_privacy_text,
                                    style: TextStyle(
                                      fontSize: 12.sp,
                                      color: const Color(0xFF111111),
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                    Positioned(
                      left: 19.w,
                      bottom: 2.h,
                      child: Container(
                        width: 283.w,
                        height: 110.h,
                        decoration: const BoxDecoration(
                          gradient: LinearGradient(
                            begin: Alignment.topCenter,
                            end: Alignment.bottomCenter,
                            colors: [
                              Color(0x00ffffff),
                              Colors.white,
                            ],
                          ),
                        ),
                      ),
                    ),
                    Positioned(
                      bottom: 15.h,
                      left: 24.w,
                      child: Row(
                        children: [
                          GestureDetector(
                            onTap: () {
                              setState(() {
                                if (type == termsUse) {
                                  termsUseCheck = !termsUseCheck;
                                } else {
                                  termsPrivacyCheck = !termsPrivacyCheck;
                                }
                              });
                              dialogState(
                                () {},
                              );
                            },
                            child: Image.asset(
                              (type == termsUse)
                                  ? (termsUseCheck
                                      ? 'assets/images/ic_check_box.png'
                                      : 'assets/images/ic_uncheck_box.png')
                                  : (termsPrivacyCheck
                                      ? 'assets/images/ic_check_box.png'
                                      : 'assets/images/ic_uncheck_box.png'),
                              width: 16.w,
                              height: 16.h,
                            ),
                          ),
                          SizedBox(
                            width: 8.w,
                          ),
                          Text(
                            '약관에 동의합니다.',
                            style: TextStyle(
                                color: const Color(0xFF111111),
                                fontSize: 14.sp,
                                fontWeight: FontWeight.w400),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            );
          },
        );
      },
    );
  }
}
