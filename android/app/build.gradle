plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '2')
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0.1')

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties') // 수정된 경로 확인
boolean hasKeystore = keystorePropertiesFile.exists()

if (hasKeystore) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.datatrip.map_sample"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.datatrip.map_sample"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            if (hasKeystore) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            } else {
                println("Warning: No keystore found. Skipping release signing.")
            }
        }
    }

    buildTypes {
        release {
            // Keystore가 있는 경우에만 서명 설정 사용
            if (hasKeystore) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            shrinkResources false
        }
        debug {
            // 디버그 모드에서는 signing 설정 사용하지 않음
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
}
